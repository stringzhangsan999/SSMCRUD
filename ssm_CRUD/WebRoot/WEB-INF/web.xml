<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.5"
 xmlns="http://java.sun.com/xml/ns/javaee" 
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
 http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
 <display-name>ssm_CRUD</display-name>
 <!-- 加载spring配置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
<!-- 指定springmvc控制器DispacherServlet -->
<!-- The front controller of this Spring Web application, responsible for handling all application requests -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- <init-param> 我们按照默认方式防止WEB-INF下 配置文件名称规定为 (servlet-name)-serrvlet.xml
			<param-name>contextConfigLocation</param-name>
			<param-value>location</param-value>
		</init-param> -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>*.do</url-pattern>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
	
	<!-- 配置字符过滤器这个过滤器是spring提供的 注意所有过滤器最好放在字符过滤器之后以免出错 -->
 	<filter>
 	<filter-name>characterEncodingFilter</filter-name>
 	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
 	<init-param>
 	<param-name>encoding</param-name>
 	<param-value>UTF-8</param-value>
 	</init-param>
 	<init-param>
 	<!-- 设置请求编码为utf-8 -->
 	<param-name>forceRequestEncoding</param-name>
 	<param-value>true</param-value>
 	</init-param>
 	 	<init-param>
 	<!-- 设置响应编码为utf-8 -->
 	<param-name>forceResponseEncoding</param-name>
 	<param-value>true</param-value>
 	</init-param>
 	</filter>
 	
 	<filter-mapping>
 	<filter-name>characterEncodingFilter</filter-name>
 	<url-pattern>/*</url-pattern>
 	</filter-mapping>
 	
 	
 	<!-- 4、使用Rest风格的URI，将页面普通的post请求转为指定的delete或者put请求 -->
 	<filter>
 	<filter-name>HiddenHttpMethodFilter</filter-name>
 	<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
 	</filter>
 	
 	<filter-mapping>
 	<filter-name>HiddenHttpMethodFilter</filter-name>
 	<url-pattern>/*</url-pattern>
 	</filter-mapping>
 	
 	
<!--  spring专门提供处理put请求的过滤器去规避了tomcat不能获取put请求数据的错误-->

	<filter>
 	<filter-name>HttpPutFormContentFilter</filter-name>
 	<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
 	</filter>
 	
 	<filter-mapping>
 	<filter-name>HttpPutFormContentFilter</filter-name>
 	<url-pattern>/*</url-pattern>
 	</filter-mapping> 
 	
 	<welcome-file-list>
 	<welcome-file>index.jsp</welcome-file>
 	</welcome-file-list>
</web-app>